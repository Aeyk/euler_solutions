#lang racket
;; Problem 12
;; ==========


;;    The sequence of triangle numbers is generated by adding the natural
;;    numbers. So the 7^th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =
;;    28. The first ten terms would be:

;;                     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

;;    Let us list the factors of the first seven triangle numbers:

;;       1: 1
;;       3: 1,3
;;       6: 1,2,3,6
;;      10: 1,2,5,10
;;      15: 1,3,5,15
;;      21: 1,3,7,21
;;      28: 1,2,4,7,14,28

;;    We can see that 28 is the first triangle number to have over five
;;    divisors.

;;    What is the value of the first triangle number to have over five hundred
;;    divisors?

   
;;    Answer: 8091de7d285989bbfa9a2f9f3bdcc7c0

;; TODO
;; divisors n
;; more-divisors-than? n
;; binary-search-divisors


(require memoize)
(define (triangle-number n)
  (range (+ n 1)))

(define/memo (triangle-number-sum n)
  (foldl + 0 (triangle-number n)))

(define (factor? n m)
  (eq? 0 (modulo m n)))

(define/memo (divisors n)
  (filter
   (lambda (m)
     (equal? (modulo n m) 0))
   (range 1 (+ 1 (sqrt n)))))

(define/memo (divisors n m)
  (filter
   (lambda (m)
     (equal? (modulo n m) 0))
   (range n (+ 1 (sqrt n)))))

;; (define (binary-search-for-number-of-divisors
;; 	 low high)
;;   (let (divisor-count 500)
;;     (if (<= (divisors low high) divisor-count)
;;       )))
(define (average n m)
  (int (/ (+ n m) 2)))

;; (average 1 100)

(define (binary-search lower upper query)
  (let ([mid (average lower upper)])
    (cond [(< mid query)
	  (binary-search mid upper query)]
	  [(> mid query)
	  (binary-search lower mid query)]
	  [(eq? mid query)
	   mid])))

(binary-search 1 100 5)

(define/memo (list-of-factors-of-triangle-numbers n)
  (map divisors (map triangle-number-sum (range 1 n))))

(time (length (last (list-of-factors-of-triangle-numbers 100))))

;(time (length (divisors (triangle-number-sum 1000000000))))

;; expo + binary search
;; https://www.techiedelight.com/exponential-search/

;; binary search is incomplete
;; divisors is super super slow!
;; i need to coerce complex numbers to integers for average
